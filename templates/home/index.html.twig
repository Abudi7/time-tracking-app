<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Product Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">

  <div class="container mt-5">
    <h1 class="mb-4 text-primary">🛍️ Add or Edit Product</h1>

    <!-- Product Form -->
    <form id="productForm" class="card p-4 shadow-sm">
      <input type="hidden" id="productId" /> <!-- Hidden for Edit mode -->
      <div class="mb-3">
        <label for="name" class="form-label">Product Name</label>
        <input type="text" class="form-control" id="name" required />
      </div>

      <div class="mb-3">
        <label for="price" class="form-label">Price (€)</label>
        <input type="number" class="form-control" id="price" step="0.01" required />
      </div>

      <div class="form-check mb-3">
        <input type="checkbox" class="form-check-input" id="inStock" />
        <label class="form-check-label" for="inStock">In Stock</label>
      </div>

      <button type="submit" class="btn btn-success">💾 Save Product</button>
    </form>

    <hr class="my-5">

    <!-- Product List -->
    <h2 class="text-secondary">📦 All Products</h2>
    <ul id="productList" class="list-group mt-3"></ul>
  </div>

  <script>
    const form = document.getElementById("productForm");
    const list = document.getElementById("productList");

    // Load all products
    function loadProducts() {
      fetch("http://localhost:8888/api/products")
        .then(res => res.json())
        .then(data => {
          list.innerHTML = "";
          const products = data["hydra:member"] || data["member"] || [];

          products.forEach(p => {
            const li = document.createElement("li");
            li.className = "list-group-item d-flex justify-content-between align-items-center";

            li.innerHTML = `
              <div>
                <strong>${p.name}</strong><br>
                <small>Price: ${p.price}€</small><br>
                <small class="text-muted">${p.inStock ? "✅ In Stock" : "❌ Out of Stock"}</small>
              </div>
              <div>
                <button class="btn btn-sm btn-outline-primary me-2" onclick="editProduct('${p['@id']}', '${p.name}', ${p.price}, ${p.inStock})">📝 Edit</button>
                <button class="btn btn-sm btn-outline-danger" onclick="deleteProduct('${p['@id']}')">🗑️ Delete</button>
              </div>
            `;
            list.appendChild(li);
          });
        })
        .catch(() => {
          list.innerHTML = `<li class="list-group-item text-danger">❌ Error loading products.</li>`;
        });
    }

    // Create or update product
    form.addEventListener("submit", function (e) {
      e.preventDefault();

      const id = document.getElementById("productId").value;
      const product = {
        name: document.getElementById("name").value,
        price: parseFloat(document.getElementById("price").value),
        inStock: document.getElementById("inStock").checked
      };

      const url = id ? `http://localhost:8888${id}` : "http://localhost:8888/api/products";
      const method = id ? "PATCH" : "POST";

      fetch(url, {
        method: method,
        headers: {
          "Content-Type": "application/merge-patch+json"
        },
        body: JSON.stringify(product)
      })
        .then(res => res.json())
        .then(() => {
          form.reset();
          document.getElementById("productId").value = "";
          loadProducts();
        })
        .catch(() => alert("❌ Failed to save product."));
    });

    // Edit mode - populate form
    function editProduct(id, name, price, inStock) {
      document.getElementById("productId").value = id;
      document.getElementById("name").value = name;
      document.getElementById("price").value = price;
      document.getElementById("inStock").checked = inStock;
    }

    // Delete product
    function deleteProduct(id) {
      if (!confirm("Are you sure you want to delete this product?")) return;

      fetch(`http://localhost:8888${id}`, {
        method: "DELETE"
      })
        .then(() => loadProducts())
        .catch(() => alert("❌ Failed to delete product."));
    }

    loadProducts();
  </script>

</body>
</html>
